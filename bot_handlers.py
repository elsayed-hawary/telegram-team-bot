# bot_handlers.py
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application, CommandHandler, MessageHandler,
    CallbackQueryHandler, ContextTypes, filters,
)
from user_store import upsert_user

async def _track_user(update: Update):
    tg_user = None
    if update.message and update.message.from_user:
        tg_user = update.message.from_user
    elif update.callback_query and update.callback_query.from_user:
        tg_user = update.callback_query.from_user
    elif update.effective_user:
        tg_user = update.effective_user
    if tg_user:
        upsert_user(tg_user)

async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await _track_user(update)
    await update.message.reply_text("Ø£Ù‡Ù„Ø§Ù‹! Ø§Ù„Ø¨ÙˆØª Ø´ØºØ§Ù„ âœ…\nØ¬Ø±Ù‘Ø¨ /help.")

async def cmd_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await _track_user(update)
    await update.message.reply_text(
        "Ø§Ù„Ø£ÙˆØ§Ù…Ø±:\n/start â€” Ø¨Ø¯Ø¡\n/help â€” Ù…Ø³Ø§Ø¹Ø¯Ø©\n/about â€” Ø¹Ù† Ø§Ù„Ø¨ÙˆØª\n/menu â€” Ø£Ø²Ø±Ø§Ø± Ù…Ø«Ø§Ù„\nØ£ÙƒØªØ¨ Ø£ÙŠ Ø±Ø³Ø§Ù„Ø© ÙˆÙ‡Ø±Ø¯ Ø¹Ù„ÙŠÙƒ."
    )

async def cmd_about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await _track_user(update)
    await update.message.reply_text("Ø¨ÙˆØª ØªÙŠÙ„ÙŠØ¬Ø±Ø§Ù… Ù…Ø¹ ØªØ®Ø²ÙŠÙ† Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…ÙŠÙ† ØªÙ„Ù‚Ø§Ø¦ÙŠÙ‹Ø§ ðŸ’¾")

async def cmd_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await _track_user(update)
    kb = [[InlineKeyboardButton("Ø²Ø± 1", callback_data="btn_1")],
          [InlineKeyboardButton("Ø²Ø± 2", callback_data="btn_2")]]
    await update.message.reply_text("Ø§Ø®ØªØ§Ø± Ø²Ø±:", reply_markup=InlineKeyboardMarkup(kb))

async def on_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await _track_user(update)
    q = update.callback_query
    await q.answer()
    if q.data == "btn_1":
        await q.edit_message_text("ØªÙ… Ø§Ù„Ø¶ØºØ· Ø¹Ù„Ù‰ Ø²Ø± 1 âœ…")
    elif q.data == "btn_2":
        await q.edit_message_text("ØªÙ… Ø§Ù„Ø¶ØºØ· Ø¹Ù„Ù‰ Ø²Ø± 2 âœ…")

async def on_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await _track_user(update)
    await update.message.reply_text(f"Ø¥Ù†Øª ÙƒØªØ¨Øª: {update.message.text or ''}")

def register_handlers(app: Application) -> None:
    app.add_handler(CommandHandler("start", cmd_start))
    app.add_handler(CommandHandler("help", cmd_help))
    app.add_handler(CommandHandler("about", cmd_about))
    app.add_handler(CommandHandler("menu", cmd_menu))
    app.add_handler(CallbackQueryHandler(on_button))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, on_text))
